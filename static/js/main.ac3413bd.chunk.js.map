{"version":3,"sources":["registerServiceWorker.js","REST/api.js","navigation/history.js","components/HOC/withProps.js","navigation/book.js","REST/config.js","instruments/helpers.js","components/SearchBar/index.js","components/Header/index.js","components/Movie/index.js","components/Spinner/index.js","pages/Main/index.js","pages/Film/index.js","components/NoResults/index.js","pages/Search/index.js","pages/Favorites/index.js","app/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","_fetchMovie","_fetchFavoriteMovies","_searchMovies","_fetchPopularMovies","createBrowserHistory","basename","process","createContext","Provider","Consumer","withProps","Enhanceable","_Component","WithProps","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","context","assign","props","Component","book","freeze","main","favorites","search","film","ROOT_URL","API_KEY","MOVIE_URL","id","concat","POPULAR_URL","page","SEARCH_URL","query","api","fetchPopularMovies","asyncToGenerator","regenerator_default","mark","_callee","response","_ref","popularMovies","totalPages","wrap","_context","prev","next","fetch","sent","status","Error","json","results","total_pages","abrupt","stop","_x","searchMovies","_callee2","newQuery","_ref2","foundMovies","_context2","toLowerCase","replace","_x2","_x3","fetchFavoriteMovies","_callee3","moviesArray","promises","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movie","responses","success","responsesJsons","favmov","_context3","undefined","Symbol","iterator","done","push","t0","return","finish","Promise","all","every","result","map","item","_x4","fetchMovie","_callee4","_context4","_x5","debounce","func","timeout","wait","length","immediate","_len","args","Array","_key","callNow","clearTimeout","setTimeout","SearchBar","_handleFormSubmit","e","preventDefault","_submitQuery","_updateQuery","target","setState","history","pathname","_handleKeyDown","className","onSubmit","type","placeholder","onChange","onKeyDown","Header","NavLink","to","Movie","like","favoriteMoviesIds","includes","toString","_toggleLike","fetchFavoriteMoviesAsync","_deleteMovieId","_setMovieId","localStorage","setItem","splice","indexOf","_this$props","poster_path","original_title","release_date","vote_average","imgJsx","src","alt","noImgJsx","Link","onClick","Spinner","isSpinning","Main","_getPrototypeOf2","call","pages","_initInfiniteScroll","innerHeight","scrollY","document","body","offsetHeight","_fetchPopularMoviesAsync","_setMoviesFetchingState","stateSpin","message","addEventListener","removeEventListener","_this$state","movies","Movie_Movie","react","Header_Header","SearchBar_SearchBar","Spinner_Spinner","movieData","_fetchMovieAsync","qs","parse","_this$state$movieData","tagline","overview","genres","genre","name","NoResults","noResults","prevQuery","_compareQueries","prevProps","_searchMoviesAsync","_setNoResultsState","isNoResults","isNewQuery","_this$page","NoResults_NoResults","Favorites","favoriteMovies","_fetchFavoriteMoviesAsync","_this2","App","getItem","split","Switch","Route","exact","component","path","Search","Film","ReactDOM","render","Router","App_App","getElementById","URL","origin","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ac3413bd.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { MOVIE_URL, POPULAR_URL, SEARCH_URL, FAV_URL } from './config.js';\n\nexport const api = {\n  async fetchPopularMovies(page) {\n    const response = await fetch(POPULAR_URL(page));\n\n    if (response.status !== 200) {\n      throw new Error('Popular movies were not fetched.');\n    }\n\n    const { results: popularMovies, total_pages: totalPages } = await response.json();\n    \n    return { popularMovies, totalPages };\n  },\n\n  async searchMovies(query, page) {\n    const newQuery = query.toLowerCase().replace(/ /g, '%20');\n    const response = await fetch(SEARCH_URL(newQuery, page));\n\n    if (response.status !== 200) {\n      throw new Error('Search movies were not fetched.');\n    }\n\n    const { results: foundMovies, total_pages: totalPages } = await response.json();\n\n    return { foundMovies, totalPages };\n  },\n\n  async fetchFavoriteMovies(moviesArray) {\n    const promises = [];\n\n    for (const movie of moviesArray) {\n      promises.push(fetch(FAV_URL(movie)));\n    }\n\n    const responses = await Promise.all(promises)\n    const success = responses.every(result => result.status === 200);\n    const responsesJsons = responses.map(item => item.json());\n    const favmov = await Promise.all(responsesJsons);\n\n    if (!success) {\n      throw new Error('Favorite movies were not fetched');\n    }\n\n    return favmov;\n  },\n\n  async fetchMovie(id) {\n    const response = await fetch(MOVIE_URL(id));\n\n    if (response.status !== 200) {\n      throw new Error('Movie data is not fetched.');\n    }\n\n    const result = await response.json();\n    \n    return result;\n  },\n}","// history.js\nimport { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n  basename: process.env.PUBLIC_URL + '/',\n});","import React, {Component, createContext} from 'react';\n\nconst {Provider, Consumer} = createContext();\n\nconst withProps = (Enhanceable) => \n   class WithProps extends Component {\n    render() {\n      return (\n        <Consumer>\n          {\n            context => <Enhanceable {...context} {...this.props} />\n          }\n        </Consumer>\n      )\n    }\n  }\n\nexport {\n  Provider,\n  Consumer,\n  withProps\n};","export const book = Object.freeze({\n  main: '/',\n  favorites: '/favorites',\n  search: '/search',\n  film: '/movie',\n});","const ROOT_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8b2b9d1a810a529d76a8fb24caa84df';\n\nconst MOVIE_URL = (id) => `${ROOT_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\nconst POPULAR_URL = (page) => `${ROOT_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`;\nconst FAV_URL = (id) => `${ROOT_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\nconst SEARCH_URL = (query, page) => {\n  return `${ROOT_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n};\n\nexport { MOVIE_URL, POPULAR_URL, SEARCH_URL, FAV_URL };","export const debounce = (func, wait = 300, immediate = false, context = window) => {\n  let timeout;\n  return (...args) => {\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};","//Core\nimport React, {Component} from 'react';\nimport history from '../../navigation/history';\n\n//Styles\nimport './index.css';\n\nexport default class SearchBar extends Component {\n  state = {\n    query: ''\n  };\n\n  _handleFormSubmit = (e) => {\n    e.preventDefault();\n    this._submitQuery();\n  };\n\n  _updateQuery = (e) => {\n    const {value: query} = e.target;\n\n    this.setState({query});\n  };\n\n  _submitQuery = () => {\n    const { query } = this.state;\n\n    if (!query) return null;\n    \n    history.push({\n      pathname: '/search',\n      search: `results=${query}`\n    });\n\n    this.setState({query: ''});\n  };\n\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this._submitQuery();\n    }\n  };\n\n  render () {\n    return (\n      <div className = \"search\">\n        <form\n          className = \"search-form\"\n          onSubmit = { this._handleFormSubmit }\n        >\n          <input\n            className = \"search-form__input\" \n            type = \"text\" \n            placeholder = \"Find movies\"\n            onChange = { this._updateQuery }\n            onKeyDown = { this._handleKeyDown }\n          />\n          <button type = \"submit\" className = \"btn search-form__btn\"></button>\n        </form>\n      </div>\n    );\n  }\n}","//Core\nimport React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//Styles\nimport './index.css';\n\nexport default class Header extends Component {\n  render () {\n    return (\n      <header className = \"header\">\n        <div className = \"header__wrapper container\">\n          <div className = \"logo\">\n            <NavLink to = '/' className = \"logo__link\" >MyMovies</NavLink>\n          </div>\n          <div className = \"header__links header-links\">\n            <NavLink to = '/favorites' className = \"header-links__item header-links__item_fav\"></NavLink>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}","//Core\nimport React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n//Styles\nimport './index.css';\n\nexport default class Movie extends Component {\n  state = {\n    like: this.props.favoriteMoviesIds.includes(this.props.id.toString()),\n  };\n\n  _toggleLike = () => {\n    const { like } = this.state;\n    const id = this.props.id.toString();\n    const { fetchFavoriteMoviesAsync } = this.props;\n    \n    if (like) {\n      this._deleteMovieId(id);\n      this.setState({ like: false });\n    } else {\n      this._setMovieId(id);\n      this.setState({ like: true });\n    }\n\n    if (fetchFavoriteMoviesAsync) {\n      fetchFavoriteMoviesAsync();\n    }\n  };\n\n  _setMovieId = (id) => {\n    const { favoriteMoviesIds } = this.props;\n\n    favoriteMoviesIds.push(id);\n    localStorage.setItem('favMovies', favoriteMoviesIds);\n  };\n\n  _deleteMovieId = (id) => {\n    const { favoriteMoviesIds } = this.props;\n\n    favoriteMoviesIds.splice(favoriteMoviesIds.indexOf(id), 1);\n    localStorage.setItem('favMovies', favoriteMoviesIds);\n  };\n\n  render () {\n    const { id, poster_path, original_title, release_date, vote_average } = this.props;\n    const { like } = this.state;\n\n    const imgJsx = (\n      <img className = \"movie__poster\" \n        src = { `https://image.tmdb.org/t/p/w300/${ poster_path }` }\n        alt = { `${original_title} poster` }\n      />\n    );\n\n    const noImgJsx = (<div className = \"movie__no-poster\"></div>);\n\n    return (\n      \n      <div className = \"movie\">\n        <div className = \"movie__container\">\n          { poster_path ? imgJsx : noImgJsx }\n          <div className = \"movie__info\">\n            <Link className = \"movie__link\" to = {{ pathname: \"/movie\", search: `?id=${id}` }}>\n              <h2 className = \"movie__title\">{ original_title }</h2>\n            </Link>\n            <div className = \"movie__block\">\n              <div className = \"movie__wrap\">\n                <span className = \"movie__rate\">{ `Rate: ${vote_average}` }</span>\n                <span className = \"movie__date\">{ `Date: ${release_date}` }</span>\n              </div>\n              <button \n                className = { like ? \"movie__like movie__like_active\" : \"movie__like\" }\n                onClick = { this._toggleLike }\n              >\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","//Core\nimport React, { Component } from 'react';\n\n//Styles\nimport './style.css';\n\nexport default class Spinner extends Component {\n  render() {\n    const { isSpinning } = this.props;\n\n    return isSpinning ? <div className = \"spinner\"><div></div><div></div><div></div><div></div></div> : null;\n  }\n}","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport { api } from '../../REST/api';\nimport { debounce } from '../../instruments';\n\n// Components\nimport SearchBar from '../../components/SearchBar';\nimport Header from '../../components/Header';\nimport Movie from '../../components/Movie';\nimport Spinner from '../../components/Spinner';\nimport { withProps } from '../../components/HOC/withProps';\n\nexport class Main extends Component {\n  state = {\n    popularMovies: [],\n    isSpinning: false,\n  };\n\n  page = {\n    pages: 1,\n    totalPages: 1,\n  };\n\n  componentDidMount() {\n    const { pages } = this.page;\n\n    this._fetchPopularMoviesAsync(pages);\n    window.addEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  _initInfiniteScroll = debounce(() => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight && this.page.pages < this.page.totalPages) {\n      this.page.pages += 1;\n      this._fetchPopularMoviesAsync(this.page.pages);\n    }\n  });\n\n  _setMoviesFetchingState = (stateSpin) => {\n    this.setState({ isSpinning: stateSpin });\n  };\n\n  _fetchPopularMoviesAsync = async (page) => {\n    try {\n      this._setMoviesFetchingState(true);\n\n      const { popularMovies, totalPages } = await api.fetchPopularMovies(page);\n\n      if (this.page.totalPages !== totalPages) {\n        this.page.totalPages = totalPages;\n      };\n\n      this.setState({ popularMovies: this.state.popularMovies.concat(popularMovies) });\n    } catch ({message}) {\n      console.log(message);\n    } finally {\n      this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { popularMovies, isSpinning } = this.state;\n    const { favoriteMoviesIds } = this.props;\n\n    const movies = popularMovies.map(movie => (\n      <Movie\n        favoriteMoviesIds = { favoriteMoviesIds }\n        key = { movie.id } \n        { ...movie }\n      />\n    ));\n\n    return (\n      <Fragment>\n        <Header />\n        <main id = \"main\" className = \"main\">\n          <div className = \"container\">\n            <div className = \"heading\">\n              <h1 className = \"heading__title\">Discover, find and save movies to your collection of favorites</h1>\n            </div>\n            <SearchBar />\n            <div id = \"movies-list\" className = \"movie-list\">\n              { movies }\n            </div>\n            <Spinner isSpinning = { isSpinning } />\n          </div>\n        </main>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Main);","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport qs from 'query-string';\nimport { api } from '../../REST/api';\n\n// Components\nimport Header from '../../components/Header';\nimport { withProps } from '../../components/HOC/withProps';\n\n//Styles\nimport './styles.css';\n\nclass Film extends Component {\n  state = {\n    movieData: {},\n  };\n\n  componentDidMount () {\n    const id = qs.parse(this.props.location.search).id\n\n    this._fetchMovieAsync(id);\n  };\n\n  _fetchMovieAsync = async (id) => {\n    try {\n      const movieData = await api.fetchMovie(id);\n\n      this.setState({ movieData });\n    } catch ({message}) {\n      console.log(message);\n    } finally {\n      // this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { \n      poster_path, \n      original_title, \n      tagline, \n      overview, \n      vote_average, \n      genres, \n      release_date \n    } = this.state.movieData;\n\n    const genre = genres ? genres.map(item => {\n      return (<li key = { item.id  } className = \"film__genre\">{ item.name }</li>);\n    }) : null;\n\n    return (\n      <Fragment>\n        <Header />\n        <div className = \"film container\">\n          <div className = \"film__poster\">\n            <img className = \"film__img\" \n              src = { `https://image.tmdb.org/t/p/w300/${ poster_path }` }\n              alt = { `${original_title} poster` }\n            />\n          </div>\n          <div className = \"film__info\">\n            <h1 className = \"film__title\">{ original_title }</h1>\n            <h2 className = \"film__subtitle\">{ tagline }</h2>\n            <span className = \"film__rate\">Rate: { vote_average }</span>\n            <span className = \"film__date\">Release date: { release_date }</span>\n            <div className = \"film__genres-block\">\n              <span className = \"film__text\">Genres:</span>\n              <ul className = \"film__genres\">{ genre }</ul>\n            </div>\n            <p className = \"film__description\">{ overview }</p>\n          </div>\n        </div>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Film);","// Core\nimport React, { Component } from 'react';\n\n//Styles\nimport './index.css';\n\nexport default class NoResults extends Component {\n  render () {\n    return (\n      <div className = \"no-results\">\n        <div className = \"no-results__cat\">\n          <span>_/\\*/\\</span>\n          <span>( o_o  )_)</span>\n          <span>( u  u  , ),</span>\n          <span>######</span>\n        </div>\n      </div>\n    );\n  }\n};","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport qs from 'query-string';\nimport { api } from '../../REST/api';\nimport { debounce } from '../../instruments';\n\n// Components\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport Movie from '../../components/Movie';\nimport Spinner from '../../components/Spinner';\nimport NoResults from '../../components/NoResults';\nimport { withProps } from '../../components/HOC/withProps';\n\nclass Search extends Component {\n  state = {\n    foundMovies: [],\n    isSpinning: false,\n    noResults: false,\n  };\n\n  page = {\n    query: qs.parse(this.props.location.search).results,\n    prevQuery: qs.parse(this.props.location.search).results,\n    pages: 1,\n    totalPages: 1,\n  };\n\n  componentDidMount () {\n    const { query, pages } = this.page;\n\n    this._searchMoviesAsync(query, pages);\n    window.addEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  componentDidUpdate (prevProps) {\n    this._compareQueries(prevProps);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  _compareQueries = (prevProps) => {\n    const prevQuery = qs.parse(prevProps.location.search).results;\n    const newQuery = qs.parse(this.props.location.search).results;\n\n    if (prevQuery !== newQuery) {\n      this.page = {\n        query: newQuery,\n        prevQuery: newQuery,\n        pages: 1,\n        totalPages: 1,\n      };\n      this._searchMoviesAsync(newQuery, this.page.pages, true);\n    }\n  };\n\n  _setMoviesFetchingState = (stateSpin) => {\n    this.setState({ isSpinning: stateSpin });\n  };\n\n  _setNoResultsState = (isNoResults) => {\n    this.setState({ noResults: isNoResults });\n  };\n\n  _initInfiniteScroll = debounce(() => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight && this.page.pages < this.page.totalPages) {\n      this.page.pages += 1;\n      this._searchMoviesAsync(this.page.query, this.page.pages);\n    }\n  });\n\n  _searchMoviesAsync = async (query, page, isNewQuery) => {\n    try {\n      this._setMoviesFetchingState(true);\n\n      const { foundMovies, totalPages } = await api.searchMovies(query, page);\n\n      if (this.page.totalPages !== totalPages) {\n        this.page.totalPages = totalPages;\n      }\n\n      if (isNewQuery) {\n        this.setState({ foundMovies });\n      } else {\n        this.setState({ foundMovies: this.state.foundMovies.concat(foundMovies) });\n      }\n\n      if (this.state.noResults) {\n        this._setNoResultsState(false);\n      }\n    } catch ({message}) {\n      this._setNoResultsState(true);\n      console.log(message);\n    } finally {\n      this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { foundMovies, isSpinning, noResults } = this.state;\n    const { favoriteMoviesIds } = this.props;\n    const { query } = this.page;\n\n    const movies = foundMovies.map(movie => (\n        <Movie \n          favoriteMoviesIds = { favoriteMoviesIds }\n          key = { movie.id } \n          { ...movie }\n        />\n    ));\n\n    return (\n      <Fragment>\n        <Header />\n        <main id = \"main\" className = \"main main_search\">\n          <div className = \"container\">\n            <div className = \"heading\">\n              <h1 className = \"heading__title\">\n                {\n                  foundMovies.length !== 0 ?\n                  `Results by searching \"${ query }\".` :\n                  `Results by searching \"${ query }\". Try out more...`\n                }\n              </h1>\n            </div>\n            <SearchBar />\n            <div id = \"movies-list\" className = \"movie-list\">\n              {\n                noResults ? <NoResults /> : movies\n              }\n            </div>\n            <Spinner isSpinning = { isSpinning } />\n          </div>\n        </main>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Search);","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport { api } from '../../REST/api';\n\n// Components\nimport Header from '../../components/Header';\nimport Movie from '../../components/Movie';\nimport Spinner from '../../components/Spinner';\nimport { withProps } from '../../components/HOC/withProps';\n\nexport class Favorites extends Component {\n  state = {\n    favoriteMovies: [],\n    isSpinning: false,\n  };\n\n  componentDidMount() {\n    this._fetchFavoriteMoviesAsync();\n  };\n\n  _setMoviesFetchingState = (stateSpin) => {\n    this.setState({ isSpinning: stateSpin });\n  };\n\n  _fetchFavoriteMoviesAsync = async () => {\n    try {\n      this._setMoviesFetchingState(true);\n\n      const { favoriteMoviesIds } = this.props;\n      const favoriteMovies = await api.fetchFavoriteMovies(favoriteMoviesIds);\n\n      this.setState({ favoriteMovies });\n    } catch ({message}) {\n      console.log(message);\n    } finally {\n      this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { favoriteMovies, isSpinning } = this.state;\n    const { favoriteMoviesIds } = this.props;\n\n    const movies = favoriteMovies.map(movie => (\n      <Movie \n        favoriteMoviesIds = { favoriteMoviesIds }\n        fetchFavoriteMoviesAsync = { this._fetchFavoriteMoviesAsync }\n        key = { movie.id } \n        { ...movie }\n      />\n    ));\n\n    return (\n      <Fragment>\n        <Header />\n        <main id = \"main\" className = \"main main_favorites\">\n          <div className = \"container\">\n            <div id = \"movies-list\" className = \"movie-list\">\n              <Spinner isSpinning = { isSpinning } />\n              { movies }\n            </div>\n          </div>\n        </main>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Favorites);","// Core\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport { Provider } from '../components/HOC/withProps';\n\n//Navigation\nimport { book } from '../navigation/book'\n\n// Pages\nimport Main from '../pages/Main';\nimport Film from '../pages/Film';\nimport Search from '../pages/Search';\nimport Favorites from '../pages/Favorites';\n\nexport default class App extends Component {\n  state = {\n    favoriteMoviesIds: localStorage.getItem('favMovies') ? localStorage.getItem('favMovies').split(',') : [],\n  };\n\n  render () {\n    const { favoriteMoviesIds } = this.state;\n\n    return (\n      <Provider value = {{ favoriteMoviesIds }}>\n        <Switch>\n          <Route\n            exact\n            component = { Main }\n            path = { book.main }          \n          />\n          <Route\n            exact\n            component = { Favorites }\n            path = { book.favorites }          \n          />\n          <Route\n            exact\n            component = { Search }\n            path = { book.search }          \n          />\n          <Route\n            exact\n            component = { Film }\n            path = { book.movie }          \n          />\n        </Switch>\n      </Provider>\n    );\n  };\n}\n","// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './navigation/history';\n\n// Theme\nimport './theme/index.css';\n\n// App\nimport App from './app/App';\n\nReactDOM.render(\n    <Router history = { history } >\n      <App/>\n    </Router>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}