{"version":3,"sources":["registerServiceWorker.js","REST/api.js","navigation/history.js","components/HOC/withProps.js","navigation/book.js","REST/config.js","instruments/helpers.js","components/SearchBar/index.js","components/Header/index.js","components/Movie/index.js","components/Spinner/index.js","pages/Main/index.js","pages/Favorites/index.js","components/NoResults/index.js","pages/Search/index.js","app/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","_fetchFavoriteMovies","_searchMovies","_fetchPopularMovies","createBrowserHistory","createContext","Provider","Consumer","withProps","Enhanceable","_Component","WithProps","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","context","assign","props","Component","book","freeze","main","favorites","search","ROOT_URL","API_KEY","POPULAR_URL","page","concat","SEARCH_URL","query","api","fetchPopularMovies","asyncToGenerator","regenerator_default","mark","_callee","response","_ref","popularMovies","totalPages","wrap","_context","prev","next","fetch","sent","status","Error","json","results","total_pages","abrupt","stop","_x","searchMovies","_callee2","newQuery","_ref2","foundMovies","_context2","toLowerCase","replace","_x2","_x3","fetchFavoriteMovies","_callee3","moviesArray","promises","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movie","responses","success","responsesJsons","favmov","_context3","undefined","Symbol","iterator","done","push","id","t0","return","finish","Promise","all","every","result","map","item","_x4","debounce","func","timeout","wait","length","immediate","_len","args","Array","_key","callNow","clearTimeout","setTimeout","SearchBar","_handleFormSubmit","e","preventDefault","_submitQuery","_updateQuery","target","setState","history","pathname","_handleKeyDown","className","onSubmit","type","placeholder","onChange","onKeyDown","Header","_openSearch","_toggleSearch","Link","to","Movie","like","favoriteMoviesIds","includes","toString","_toggleLike","fetchFavoriteMoviesAsync","_deleteMovieId","_setMovieId","localStorage","setItem","splice","indexOf","_this$props","poster_path","original_title","release_date","vote_average","imgJsx","src","alt","noImgJsx","onClick","Spinner","isSpinning","Main","_getPrototypeOf2","call","pages","_initInfiniteScroll","innerHeight","scrollY","document","body","offsetHeight","_fetchPopularMoviesAsync","_setMoviesFetchingState","stateSpin","message","addEventListener","removeEventListener","_this$state","movies","Movie_Movie","react","Header_Header","SearchBar_SearchBar","Spinner_Spinner","Favorites","favoriteMovies","_fetchFavoriteMoviesAsync","_this2","NoResults","noResults","qs","parse","prevQuery","_compareQueries","prevProps","_searchMoviesAsync","_setNoResultsState","isNoResults","isNewQuery","_this$page","NoResults_NoResults","App","getItem","split","Switch","Route","exact","component","path","Search","ReactDOM","render","Router","App_App","getElementById","URL","process","origin","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f7f119f4.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { POPULAR_URL, SEARCH_URL, FAV_URL } from './config.js';\n\nexport const api = {\n  async fetchPopularMovies(page) {\n    const response = await fetch(POPULAR_URL(page));\n\n    if (response.status !== 200) {\n      throw new Error('Popular movies were not fetched.');\n    }\n\n    const { results: popularMovies, total_pages: totalPages } = await response.json();\n    \n    return { popularMovies, totalPages };\n  },\n\n  async searchMovies(query, page) {\n    const newQuery = query.toLowerCase().replace(/ /g, '%20');\n    const response = await fetch(SEARCH_URL(newQuery, page));\n\n    if (response.status !== 200) {\n      throw new Error('Search movies were not fetched.');\n    }\n\n    const { results: foundMovies, total_pages: totalPages } = await response.json();\n\n    return { foundMovies, totalPages };\n  },\n\n  async fetchFavoriteMovies(moviesArray) {\n    const promises = [];\n\n    for (const movie of moviesArray) {\n      promises.push(fetch(FAV_URL(movie)));\n    }\n\n    const responses = await Promise.all(promises)\n    const success = responses.every(result => result.status === 200);\n    const responsesJsons = responses.map(item => item.json());\n    const favmov = await Promise.all(responsesJsons);\n\n    if (!success) {\n      throw new Error('Favorite movies were not fetched');\n    }\n\n    return favmov;\n  },\n}","// history.js\nimport { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component, createContext} from 'react';\n\nconst {Provider, Consumer} = createContext();\n\nconst withProps = (Enhanceable) => \n   class WithProps extends Component {\n    render() {\n      return (\n        <Consumer>\n          {\n            context => <Enhanceable {...context} {...this.props} />\n          }\n        </Consumer>\n      )\n    }\n  }\n\nexport {\n  Provider,\n  Consumer,\n  withProps\n};","export const book = Object.freeze({\n  main: '/',\n  favorites: '/favorites',\n  search: '/search',\n});","const ROOT_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8b2b9d1a810a529d76a8fb24caa84df';\n\nconst POPULAR_URL = (page) => `${ROOT_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`;\nconst FAV_URL = (id) => `${ROOT_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\nconst SEARCH_URL = (query, page) => {\n  return `${ROOT_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n};\n\nexport { POPULAR_URL, SEARCH_URL, FAV_URL };","export const debounce = (func, wait = 300, immediate = false, context = window) => {\n  let timeout;\n  return (...args) => {\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};","//Core\nimport React, {Component} from 'react';\nimport history from '../../navigation/history';\n\n//Styles\nimport './index.css';\n\nexport default class SearchBar extends Component {\n  state = {\n    query: ''\n  };\n\n  _handleFormSubmit = (e) => {\n    e.preventDefault();\n    this._submitQuery();\n  };\n\n  _updateQuery = (e) => {\n    const {value: query} = e.target;\n\n    this.setState({query});\n  };\n\n  _submitQuery = () => {\n    const { query } = this.state;\n\n    if (!query) return null;\n    \n    history.push({\n      pathname: '/search',\n      search: `results=${query}`\n    });\n\n    this.setState({query: ''});\n  };\n\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this._submitQuery();\n    }\n  };\n\n  render () {\n    return (\n      <div className = \"search\">\n        <form\n          className = \"search-form\"\n          onSubmit = { this._handleFormSubmit }\n        >\n          <input\n            className = \"search-form__input\" \n            type = \"text\" \n            placeholder = \"Find movies\"\n            onChange = { this._updateQuery }\n            onKeyDown = { this._handleKeyDown }\n          />\n          <button type = \"submit\" className = \"btn search-form__btn\"></button>\n        </form>\n      </div>\n    );\n  }\n}","//Core\nimport React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n//Styles\nimport './index.css';\n\nexport default class Header extends Component {\n  _openSearch = () => {\n    const { _toggleSearch } = this.props;\n\n    _toggleSearch(true);\n  };\n\n  render () {\n    return (\n      <header className = \"header\">\n        <div className = \"header__wrapper container\">\n          <div className = \"logo\">\n            <Link to = '/' className = \"logo__link\" >MyMovies</Link>\n          </div>\n          <div className = \"header__links header-links\">\n            <Link to = '/favorites' className = \"header-links__item header-links__item_fav\" ></Link>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}","//Core\nimport React, {Component} from 'react';\n\n//Styles\nimport './index.css';\n\nexport default class Movie extends Component {\n  state = {\n    like: this.props.favoriteMoviesIds.includes(this.props.id.toString()),\n  };\n\n  _toggleLike = () => {\n    const { like } = this.state;\n    const id = this.props.id.toString();\n    const { fetchFavoriteMoviesAsync } = this.props;\n\n    if (like) {\n      this._deleteMovieId(id);\n      this.setState({ like: false });\n    } else {\n      this._setMovieId(id);\n      this.setState({ like: true });\n    }\n\n    if (fetchFavoriteMoviesAsync) {\n      fetchFavoriteMoviesAsync();\n    }\n  };\n\n  _setMovieId = (id) => {\n    const { favoriteMoviesIds } = this.props;\n\n    favoriteMoviesIds.push(id);\n    localStorage.setItem('favMovies', favoriteMoviesIds);\n  };\n\n  _deleteMovieId = (id) => {\n    const { favoriteMoviesIds } = this.props;\n\n    favoriteMoviesIds.splice(favoriteMoviesIds.indexOf(id), 1);\n    localStorage.setItem('favMovies', favoriteMoviesIds);\n  };\n\n  render () {\n    const { poster_path, original_title, release_date, vote_average } = this.props;\n    const { like } = this.state;\n\n    const imgJsx = (\n      <img className = \"movie__poster\" \n        src = { `https://image.tmdb.org/t/p/w300/${ poster_path }` }\n        alt = { `${original_title} poster` }\n      />\n    );\n\n    const noImgJsx = (<div className = \"movie__no-poster\"></div>);\n\n    return (\n      <div className = \"movie\">\n        <div className = \"movie__container\">\n          { poster_path ? imgJsx : noImgJsx }\n          <div className = \"movie__info\">\n            <h2 className = \"movie__title\">{ original_title }</h2>\n            <div className = \"movie__block\">\n              <div className = \"movie__wrap\">\n                <span className = \"movie__date\">{ `Date: ${release_date}` }</span>\n                <span className = \"movie__rate\">{ `Rate: ${vote_average}` }</span>\n              </div>\n              <button \n                className = { like ? \"movie__like movie__like_active\" : \"movie__like\" }\n                onClick = { this._toggleLike }\n              >\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","//Core\nimport React, { Component } from 'react';\n\n//Styles\nimport './style.css';\n\nexport default class Spinner extends Component {\n  render() {\n    const { isSpinning } = this.props;\n\n    return isSpinning ? <div className = \"spinner\"><div></div><div></div><div></div><div></div></div> : null;\n  }\n}","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport { api } from '../../REST/api';\nimport { debounce } from '../../instruments';\n\n// Components\nimport SearchBar from '../../components/SearchBar';\nimport Header from '../../components/Header';\nimport Movie from '../../components/Movie';\nimport Spinner from '../../components/Spinner';\nimport { withProps } from '../../components/HOC/withProps';\n\nexport class Main extends Component {\n  state = {\n    popularMovies: [],\n    isSpinning: false,\n  };\n\n  page = {\n    pages: 1,\n    totalPages: 1,\n  };\n\n  componentDidMount() {\n    const { pages } = this.page;\n\n    this._fetchPopularMoviesAsync(pages);\n    window.addEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  _initInfiniteScroll = debounce(() => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight && this.page.pages < this.page.totalPages) {\n      this.page.pages += 1;\n      this._fetchPopularMoviesAsync(this.page.pages);\n    }\n  });\n\n  _setMoviesFetchingState = (stateSpin) => {\n    this.setState({ isSpinning: stateSpin });\n  };\n\n  _fetchPopularMoviesAsync = async (page) => {\n    try {\n      this._setMoviesFetchingState(true);\n\n      const { popularMovies, totalPages } = await api.fetchPopularMovies(page);\n\n      if (this.page.totalPages !== totalPages) {\n        this.page.totalPages = totalPages;\n      };\n\n      this.setState({ popularMovies: this.state.popularMovies.concat(popularMovies) });\n    } catch ({message}) {\n      console.log(message);\n    } finally {\n      this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { popularMovies, isSpinning } = this.state;\n    const { favoriteMoviesIds } = this.props;\n\n    const movies = popularMovies.map(movie => (\n      <Movie\n        favoriteMoviesIds = { favoriteMoviesIds }\n        key = { movie.id } \n        { ...movie }\n      />\n    ));\n\n    return (\n      <Fragment>\n        <Header />\n        <main id = \"main\" className = \"main\">\n          <div className = \"container\">\n            <div className = \"heading\">\n              <h1 className = \"heading__title\">Discover, find and save movies to your collection of favorites</h1>\n            </div>\n            <SearchBar />\n            <div id = \"movies-list\" className = \"movie-list\">\n              { movies }\n            </div>\n            <Spinner isSpinning = { isSpinning } />\n          </div>\n        </main>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Main);","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport { api } from '../../REST/api';\n\n// Components\nimport Header from '../../components/Header';\nimport Movie from '../../components/Movie';\nimport Spinner from '../../components/Spinner';\nimport { withProps } from '../../components/HOC/withProps';\n\nexport class Favorites extends Component {\n  state = {\n    favoriteMovies: [],\n    isSpinning: false,\n  };\n\n  componentDidMount() {\n    this._fetchFavoriteMoviesAsync();\n  };\n\n  _setMoviesFetchingState = (stateSpin) => {\n    this.setState({ isSpinning: stateSpin });\n  };\n\n  _fetchFavoriteMoviesAsync = async () => {\n    try {\n      this._setMoviesFetchingState(true);\n\n      const { favoriteMoviesIds } = this.props;\n      const favoriteMovies = await api.fetchFavoriteMovies(favoriteMoviesIds);\n\n      this.setState({ favoriteMovies });\n    } catch ({message}) {\n      console.log(message);\n    } finally {\n      this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { favoriteMovies, isSpinning } = this.state;\n    const { favoriteMoviesIds } = this.props;\n\n    const movies = favoriteMovies.map(movie => (\n      <Movie \n        favoriteMoviesIds = { favoriteMoviesIds }\n        fetchFavoriteMoviesAsync = { this._fetchFavoriteMoviesAsync }\n        key = { movie.id } \n        { ...movie }\n      />\n    ));\n\n    return (\n      <Fragment>\n        <Header />\n        <main id = \"main\" className = \"main main_favorites\">\n          <div className = \"container\">\n            <div id = \"movies-list\" className = \"movie-list\">\n              <Spinner isSpinning = { isSpinning } />\n              { movies }\n            </div>\n          </div>\n        </main>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Favorites);","// Core\nimport React, { Component } from 'react';\n\n//Styles\nimport './index.css';\n\nexport default class NoResults extends Component {\n  render () {\n    return (\n      <div className = \"no-results\">\n        <div className = \"no-results__cat\">\n          <span>_/\\*/\\</span>\n          <span>( o_o  )_)</span>\n          <span>( u  u  , ),</span>\n          <span>######</span>\n        </div>\n      </div>\n    );\n  }\n};","// Core\nimport React, { Component, Fragment } from 'react';\n\n// Instruments\nimport qs from 'query-string';\nimport { api } from '../../REST/api';\nimport { debounce } from '../../instruments';\n\n// Components\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport Movie from '../../components/Movie';\nimport Spinner from '../../components/Spinner';\nimport NoResults from '../../components/NoResults';\nimport { withProps } from '../../components/HOC/withProps';\n\nclass Search extends Component {\n  state = {\n    foundMovies: [],\n    isSpinning: false,\n    noResults: false,\n  };\n\n  page = {\n    query: qs.parse(this.props.location.search).results,\n    prevQuery: qs.parse(this.props.location.search).results,\n    pages: 1,\n    totalPages: 1,\n  };\n\n  componentDidMount () {\n    const { query, pages } = this.page;\n\n    this._searchMoviesAsync(query, pages);\n    window.addEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  componentDidUpdate (prevProps) {\n    this._compareQueries(prevProps);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this._initInfiniteScroll);\n  };\n\n  _compareQueries = (prevProps) => {\n    const prevQuery = qs.parse(prevProps.location.search).results;\n    const newQuery = qs.parse(this.props.location.search).results;\n\n    if (prevQuery !== newQuery) {\n      this.page = {\n        query: newQuery,\n        prevQuery: newQuery,\n        pages: 1,\n        totalPages: 1,\n      };\n      this._searchMoviesAsync(newQuery, this.page.pages, true);\n    }\n  };\n\n  _setMoviesFetchingState = (stateSpin) => {\n    this.setState({ isSpinning: stateSpin });\n  };\n\n  _setNoResultsState = (isNoResults) => {\n    this.setState({ noResults: isNoResults });\n  };\n\n  _initInfiniteScroll = debounce(() => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight && this.page.pages < this.page.totalPages) {\n      this.page.pages += 1;\n      this._searchMoviesAsync(this.page.query, this.page.pages);\n    }\n  });\n\n  _searchMoviesAsync = async (query, page, isNewQuery) => {\n    try {\n      this._setMoviesFetchingState(true);\n\n      const { foundMovies, totalPages } = await api.searchMovies(query, page);\n\n      if (this.page.totalPages !== totalPages) {\n        this.page.totalPages = totalPages;\n      }\n\n      if (isNewQuery) {\n        this.setState({ foundMovies });\n      } else {\n        this.setState({ foundMovies: this.state.foundMovies.concat(foundMovies) });\n      }\n\n      if (this.state.noResults) {\n        this._setNoResultsState(false);\n      }\n    } catch ({message}) {\n      this._setNoResultsState(true);\n      console.log(message);\n    } finally {\n      this._setMoviesFetchingState(false);\n    }\n  };\n\n  render () {\n    const { foundMovies, isSpinning, noResults } = this.state;\n    const { favoriteMoviesIds } = this.props;\n    const { query } = this.page;\n\n    const movies = foundMovies.map(movie => (\n        <Movie \n          favoriteMoviesIds = { favoriteMoviesIds }\n          key = { movie.id } \n          { ...movie }\n        />\n    ));\n\n    return (\n      <Fragment>\n        <Header />\n        <main id = \"main\" className = \"main main_search\">\n          <div className = \"container\">\n            <div className = \"heading\">\n              <h1 className = \"heading__title\">\n                {\n                  foundMovies.length !== 0 ?\n                  `Results by searching \"${ query }\".` :\n                  `Results by searching \"${ query }\". Try out more...`\n                }\n              </h1>\n            </div>\n            <SearchBar />\n            <div id = \"movies-list\" className = \"movie-list\">\n              {\n                noResults ? <NoResults /> : movies\n              }\n            </div>\n            <Spinner isSpinning = { isSpinning } />\n          </div>\n        </main>\n      </Fragment>\n    );\n  };\n}\n\nexport default withProps(Search);","// Core\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport { Provider } from '../components/HOC/withProps';\n\n//Navigation\nimport { book } from '../navigation/book'\n\n// Pages\nimport Main from '../pages/Main';\nimport Favorites from '../pages/Favorites';\nimport Search from '../pages/Search';\n\nexport default class App extends Component {\n  state = {\n    favoriteMoviesIds: localStorage.getItem('favMovies') ? localStorage.getItem('favMovies').split(',') : [],\n  };\n\n  render () {\n    const { favoriteMoviesIds } = this.state;\n\n    return (\n      <Provider value = {{ favoriteMoviesIds }}>\n        <Switch>\n          <Route\n            exact\n            component = { Main }\n            path = { book.main }          \n          />\n          <Route\n            exact\n            component = { Favorites }\n            path = { book.favorites }          \n          />\n          <Route\n            exact\n            component = { Search }\n            path = { book.search }          \n          />\n        </Switch>\n      </Provider>\n    );\n  };\n}\n","// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './navigation/history';\n\n// Theme\nimport './theme/index.css';\n\n// App\nimport App from './app/App';\n\nReactDOM.render(\n    <Router history = { history }>\n      <App/>\n    </Router>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}